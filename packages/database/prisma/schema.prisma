generator client {
  provider = "prisma-client-js"
  output   = "../src"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_HOST_URL")
}

model TileMap {
  tileMapId String   @id @default(cuid()) @map("tile_map_id")
  createdAt DateTime @default(now())

  startingTileId String @map("starting_tile_id")

  tiles    Tile[]     @relation("map")
  TileGame TileGame[]
}

model Tile {
  tileId    String   @id @default(cuid()) @map("tile_id")
  createdAt DateTime @default(now())

  posX      Int    @map("pos_x")
  posY      Int    @map("pos_y")
  image     String @map("image")
  tileMapId String @map("tile_map_id")

  tileMap  TileMap    @relation(fields: [tileMapId], references: [tileMapId], name: "map")
  fromTile Edge[]     @relation("from_tile")
  toTile   Edge[]     @relation("to_tile")
  TilePawn TilePawn[]
}

model Edge {
  edgeId    String   @id @default(cuid()) @map("edge_id")
  createdAt DateTime @default(now())

  flavorText String @map("flavor_text")
  toTileId   String @map("to_tile_id")
  fromTileId String @map("from_tile_id")

  fromTile Tile @relation(fields: [fromTileId], references: [tileId], name: "from_tile")
  toTile   Tile @relation(fields: [toTileId], references: [tileId], name: "to_tile")
}

model TileGame {
  tileGameId String   @id @default(cuid()) @map("tile_game_id")
  createdAt  DateTime @default(now())

  tileMapId String @map("tile_map_id")
  name      String @map("name")
  state     String @map("state")

  tileMap  TileMap    @relation(fields: [tileMapId], references: [tileMapId])
  TilePawn TilePawn[]
}

model TilePawn {
  tilePawnId String   @id @default(cuid()) @map("tile_pawn_id")
  createdAt  DateTime @default(now())

  onTileId   String @map("tile_id")
  tileGameId String @map("tile_game_id")
  color      String @map("color")

  onTile   Tile     @relation(fields: [onTileId], references: [tileId])
  tileGame TileGame @relation(fields: [tileGameId], references: [tileGameId])
}

enum CurrentGameState {
  waiting
  playing
  finished
}

model GameState {
  gameId            String           @id @default(cuid()) @map("game_id")
  gameState         Json             @map("game_state")
  gameConfiguration Json             @map("game_configuration")
  currentGameState  CurrentGameState @map("current_game_state")
  gameType          String           @map("game_type")
  version           String           @map("version")
  lastUpdatedAt     DateTime         @default(now()) @map("last_update_timestamp")

  PlayersInGame PlayersInGame[]
}

model PlayersInGame {
  playersInGameIdentifier String @id @default(cuid()) @map("players_in_game_identifier")
  gameId                  String @map("game_id")
  playerId                String @map("player_id")

  game   GameState @relation(fields: [gameId], references: [gameId])
  player Player    @relation(fields: [playerId], references: [playerId])
}

model Player {
  playerId    String @id @default(cuid()) @map("player_id")
  displayName String @map("display_name")

  PlayersInGame PlayersInGame[]
}
